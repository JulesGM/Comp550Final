# -*- coding: utf-8 -*-
"""covert_socialqa.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j8X1N73E26pq_9SCf5OQi0GkNkpUgbCS
"""

import os
import json

path_to_socialqa = os.getcwd()

with open(os.path.join(path_to_socialqa,"socialIQa_v1.4_trn.jsonl"), 'r') as handle:
    train_socialqa = [json.loads(line) for line in handle]

with open(os.path.join(path_to_socialqa,"socialIQa_v1.4_dev.jsonl"), 'r') as handle:
    dev_socialqa = [json.loads(line) for line in handle]

with open(os.path.join(path_to_socialqa,"socialIQa_v1.4_tst.jsonl"), 'r') as handle:
    test_socialqa = [json.loads(line) for line in handle]

#####################################for train
commonsense_template = {"answerKey": "A", "id": "c10ebb0e1b588d6a534edb297d2f4443", "question": {"question_concept": "chef", "choices": [{"label": "A", "text": "cook dinner"}, {"label": "B", "text": "study french cooking"}, {"label": "C", "text": "taste sauce"}, {"label": "D", "text": "prepare food"}, {"label": "E", "text": "thin sauce"}], "stem": "What does a chef do when working in the evening?"}}


for index,social in enumerate(train_socialqa):


  test_new_social = {}
  test_new_social.update(commonsense_template)
  test_new_social["id"]= "{}".format(index)
  add_context = {"context" : social["context"]}
  test_new_social.update(add_context)
  test_new_social["answerKey"] = social["correct"]
  test_new_social["question"]["stem"] = social["question"]
  
  # del test_new_social["question"]["choices"][-1]
  test_new_social["question"]["question_concept"] = ''

  for answers in test_new_social["question"]["choices"]:

    if answers["label"] == "A":
      answers["text"] = social["answerA"]

    if answers["label"] == "B":
      answers["text"] = social["answerB"]

    if answers["label"] == "C":
      answers["text"] = social["answerC"]

    if answers["label"] == "E":
      del test_new_social["question"]["choices"][-1]

    if answers["label"] == "D":
      del test_new_social["question"]["choices"][-1]
  
  # del test_new_social["question"]["choices"][-1]
  train_socialqa[index] = test_new_social




with open(os.path.join(path_to_socialqa,"socialIQa_train.jsonl"), 'w') as f:
    for dicti in train_socialqa:
        json.dump(dicti, f)
        f.write("\n")


############################for dev
commonsense_template = {"answerKey": "A", "id": "c10ebb0e1b588d6a534edb297d2f4443", "question": {"question_concept": "chef", "choices": [{"label": "A", "text": "cook dinner"}, {"label": "B", "text": "study french cooking"}, {"label": "C", "text": "taste sauce"}, {"label": "D", "text": "prepare food"}, {"label": "E", "text": "thin sauce"}], "stem": "What does a chef do when working in the evening?"}}


for index,social in enumerate(dev_socialqa):


  test_new_social = {}
  test_new_social.update(commonsense_template)
  test_new_social["id"]="{}".format( 1e5 + index)
  add_context = {"context" : social["context"]}
  test_new_social.update(add_context)
  test_new_social["answerKey"] = social["correct"]
  test_new_social["question"]["stem"] = social["question"]
  
  # del test_new_social["question"]["choices"][-1]
  test_new_social["question"]["question_concept"] = ''

  for answers in test_new_social["question"]["choices"]:

    if answers["label"] == "A":
      answers["text"] = social["answerA"]

    if answers["label"] == "B":
      answers["text"] = social["answerB"]

    if answers["label"] == "C":
      answers["text"] = social["answerC"]

    if answers["label"] == "E":
      del test_new_social["question"]["choices"][-1]

    if answers["label"] == "D":
      del test_new_social["question"]["choices"][-1]
  
  # del test_new_social["question"]["choices"][-1]
  dev_socialqa[index] = test_new_social



with open(os.path.join(path_to_socialqa,"socialIQa_dev.jsonl"), 'w') as f:
    for dicti in dev_socialqa:
        json.dump(dicti, f)
        f.write("\n")

#################################for test
commonsense_template = {"answerKey": "A", "id": "c10ebb0e1b588d6a534edb297d2f4443", "question": {"question_concept": "chef", "choices": [{"label": "A", "text": "cook dinner"}, {"label": "B", "text": "study french cooking"}, {"label": "C", "text": "taste sauce"}, {"label": "D", "text": "prepare food"}, {"label": "E", "text": "thin sauce"}], "stem": "What does a chef do when working in the evening?"}}


for index,social in enumerate(test_socialqa):


  test_new_social = {}
  test_new_social.update(commonsense_template)
  test_new_social["id"]= "{}".format(1e5 + index)
  add_context = {"context" : social["context"]}
  test_new_social.update(add_context)
  test_new_social["answerKey"] = social["correct"]
  test_new_social["question"]["stem"] = social["question"]
  
  # del test_new_social["question"]["choices"][-1]
  test_new_social["question"]["question_concept"] = ''

  for answers in test_new_social["question"]["choices"]:

    if answers["label"] == "A":
      answers["text"] = social["answerA"]

    if answers["label"] == "B":
      answers["text"] = social["answerB"]

    if answers["label"] == "C":
      answers["text"] = social["answerC"]

    if answers["label"] == "E":
      del test_new_social["question"]["choices"][-1]

    if answers["label"] == "D":
      del test_new_social["question"]["choices"][-1]
  
  # del test_new_social["question"]["choices"][-1]
  test_socialqa[index] = test_new_social


with open(os.path.join(path_to_socialqa,"socialIQa_test.jsonl"), 'w') as f:
    for dicti in test_socialqa:
         json.dump(dicti, f)
         f.write("\n")


